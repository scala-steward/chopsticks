syntax = "proto3";

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
package dev.chopsticks.kvdb.proto;

option (scalapb.options) = {
  import: "dev.chopsticks.kvdb.codec.ProtoMappers._"
};

message DbStats {
  map<string, double> stats = 1;
}

message DbKeyConstraintList {
  repeated DbKeyConstraint constraints = 1 [(scalapb.field).collection_type="List"];
}

message DbKeyConstraint {
  enum Operator {
    EQUAL = 0;
    GREATER = 1;
    LESS = 2;
    GREATER_EQUAL = 3;
    LESS_EQUAL = 4;
    PREFIX = 5;
    FIRST = 6;
    LAST = 7;
  }

  Operator operator = 1;
  bytes operand = 2;
  string operand_display = 3;
}

message DbKeyRange {
  repeated DbKeyConstraint from = 1 [(scalapb.field).collection_type="List"];
  repeated DbKeyConstraint to = 2 [(scalapb.field).collection_type="List"];
}

message DbTailRequest {
  string column_id = 1;
  DbKeyRange range = 2 [(scalapb.field).no_box = true];
  uint64 polling_interval = 3 [(scalapb.field).type = "scala.concurrent.duration.FiniteDuration"];
  uint32 max_batch_size = 4;
}

message DbTailValuesRequest {
  string column_id = 1;
  DbKeyRange range = 2 [(scalapb.field).no_box = true];
  uint64 polling_interval = 3 [(scalapb.field).type = "scala.concurrent.duration.FiniteDuration"];
  uint32 max_batch_size = 4;
}

message DbBatchTailRequest {
  string column_id = 1;
  repeated DbKeyRange ranges = 2 [(scalapb.field).collection_type="List"];
  uint64 polling_interval = 3 [(scalapb.field).type = "scala.concurrent.duration.FiniteDuration"];
  uint32 max_batch_size = 4;
}

message DbIterateRequest {
  string column_id = 1;
  DbKeyRange range = 2 [(scalapb.field).no_box = true];
  uint32 max_batch_size = 4;
}

message DbIterateValuesRequest {
  string column_id = 1;
  DbKeyRange range = 2 [(scalapb.field).no_box = true];
  uint32 max_batch_size = 4;
}

message DbItem {
  bytes key = 1;
  bytes value = 2;
}

message MaybeDbItem {
  DbItem item = 1;
}

message DbItemBatch {
  repeated DbItem items = 1 [(scalapb.field).collection_type="Array"];
}

message DbTailItemBatch {
  oneof value {
    DbItemBatch batch = 1;
    DbEmptyTail empty_tail = 2;
  }
}

message DbIndexedTailItemBatch {
  uint32 index = 1;
  DbTailItemBatch batch = 2 [(scalapb.field).no_box = true];
}

message DbItemValue {
  bytes value = 1;
}

message MaybeDbItemValue {
  DbItemValue value = 1;
}

message DbItemValueBatch {
  bytes last_key = 1;
  repeated bytes values = 2 [(scalapb.field).collection_type="Array"];
}

message DbEmptyTail {
  google.protobuf.Timestamp time = 1 [(scalapb.field).type = "java.time.Instant", (scalapb.field).no_box = true];
  google.protobuf.BytesValue last_key = 2;
}

message DbTailItemValueBatch {
  oneof value {
    DbItemValueBatch batch = 1;
    DbEmptyTail empty_tail = 2;
  }
}

message DbPutRequest {
  string column_id = 1;
  bytes key = 2;
  bytes value = 3;
}

message DbPutResult {
}

message DbDeleteRequest {
  string column_id = 1;
  bytes key = 2;
}

message DbDeleteResult {
}

message DbDeletePrefixRequest {
  string column_id = 1;
  bytes prefix = 2;
}

message DbDeletePrefixResult {
  uint64 count = 1;
}

message DbOperationPossibleException {
  oneof content {
    bytes message = 1;
    DbOperationException exception = 2;
  }
}

message DbOperationException {
  enum ExceptionType {
    SEEK_FAILURE = 0;
    //    InitialSeekFailure = 1;
    UNOPTIMIZED_OPERATION = 2;
    INVALID_COLUMN_FAMILY = 3;
    INVALID_ARGUMENT = 4;
    UNSUPPORTED_OPERATION = 5;
    ALREADY_CLOSED = 6;
  }
  ExceptionType exception_type = 1;
  string message = 2;
}

message DbGetRequest {
  string column_id = 1;
  DbKeyConstraintList constraints = 2 [(scalapb.field).no_box = true];
}

message DbGetResult {
  DbItem item = 1;
}

message DbBatchGetRequest {
  string column_id = 1;
  repeated DbKeyConstraintList requests = 2;
}

message DbBatchGetResult {
  repeated MaybeDbItem items = 1 [(scalapb.field).collection_type="Array"];
}

message DbBatchPutRequest {
  repeated DbPutRequest requests = 2 [(scalapb.field).collection_type="Array"];
}

message DbBatchPutResult {
  uint32 count = 1;
}

message DbTransactionAction {
  oneof action {
    DbPutRequest put = 1;
    DbDeleteRequest delete = 2;
    DbDeletePrefixRequest delete_prefix = 3;
  }
}

message DbTransactionRequest {
  repeated DbTransactionAction actions = 1;
}

message DbTransactionResult {}

message DbEstimateCountRequest {
  string column_id = 1;
}

message DbEstimateCountResult {
  uint64 count = 1;
}

message DbPingResponse {
  string pong = 1;
}

message DbDropColumnFamilyRequest {
  string column_id = 1;
}

message DbDropColumnFamilyResponse {
  string column_id = 1;
}
